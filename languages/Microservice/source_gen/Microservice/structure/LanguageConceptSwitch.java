package Microservice.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int CREATE = 0;
  public static final int CreateEntity = 1;
  public static final int DELETE = 2;
  public static final int DataType = 3;
  public static final int DataTypeReference = 4;
  public static final int DeleteEntity = 5;
  public static final int Empty = 6;
  public static final int Entities = 7;
  public static final int Entity = 8;
  public static final int EntityID = 9;
  public static final int EntityType = 10;
  public static final int EntityTypeReference = 11;
  public static final int GetEntities = 12;
  public static final int GetEntity = 13;
  public static final int GetEntityBy = 14;
  public static final int IDeliveredPayloadType = 15;
  public static final int IExpectedPayloadType = 16;
  public static final int IOperationMethod = 17;
  public static final int IOperationType = 18;
  public static final int ISupportedLanguage = 19;
  public static final int KeyValuePair = 20;
  public static final int KeyValuePairReference = 21;
  public static final int Message = 22;
  public static final int Microservice = 23;
  public static final int MicroserviceReference = 24;
  public static final int NodeJs = 25;
  public static final int Operation = 26;
  public static final int OperationMethod = 27;
  public static final int OperationType = 28;
  public static final int PayloadType = 29;
  public static final int Python = 30;
  public static final int READ = 31;
  public static final int SupportedLanguage = 32;
  public static final int UPDATE = 33;
  public static final int UpdateEntity = 34;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xe995fbb60310461aL, 0xbe22cc66f48262f1L);
    builder.put(0x4151f0e6b1c7ddb6L, CREATE);
    builder.put(0x4151f0e6b1d0731fL, CreateEntity);
    builder.put(0x4151f0e6b1c7ddb8L, DELETE);
    builder.put(0x1878631b6ae763cbL, DataType);
    builder.put(0x5f791c683dd816d3L, DataTypeReference);
    builder.put(0x4151f0e6b1d117ccL, DeleteEntity);
    builder.put(0x5775eded06ed9f08L, Empty);
    builder.put(0x5775eded06ee5bb1L, Entities);
    builder.put(0x5775eded06eae105L, Entity);
    builder.put(0x5775eded06eae106L, EntityID);
    builder.put(0x1957db2831e8dd89L, EntityType);
    builder.put(0x624f1b6582e0e556L, EntityTypeReference);
    builder.put(0x4151f0e6b1d07321L, GetEntities);
    builder.put(0x5775eded06ea1f59L, GetEntity);
    builder.put(0x624f1b6583126083L, GetEntityBy);
    builder.put(0x5775eded06ecae08L, IDeliveredPayloadType);
    builder.put(0x5775eded06eae102L, IExpectedPayloadType);
    builder.put(0x4151f0e6b1d117cdL, IOperationMethod);
    builder.put(0x4151f0e6b1cb88b6L, IOperationType);
    builder.put(0x2242fe026373f54eL, ISupportedLanguage);
    builder.put(0x1957db2831e8dd8cL, KeyValuePair);
    builder.put(0x624f1b6582e9a400L, KeyValuePairReference);
    builder.put(0x5775eded06eae107L, Message);
    builder.put(0x76e8bdba0ceb9bb9L, Microservice);
    builder.put(0x675907eeb91f484bL, MicroserviceReference);
    builder.put(0x2242fe026373f552L, NodeJs);
    builder.put(0x76e8bdba0ceb9bbcL, Operation);
    builder.put(0x4151f0e6b1d0731eL, OperationMethod);
    builder.put(0x4151f0e6b1c68c22L, OperationType);
    builder.put(0x5775eded06eae101L, PayloadType);
    builder.put(0x2242fe026373f551L, Python);
    builder.put(0x4151f0e6b1c74508L, READ);
    builder.put(0x2242fe026373f54dL, SupportedLanguage);
    builder.put(0x4151f0e6b1c7ddb7L, UPDATE);
    builder.put(0x4151f0e6b1d07320L, UpdateEntity);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
