package Microservice.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int CREATE = 0;
  public static final int CreateEntity = 1;
  public static final int DELETE = 2;
  public static final int DataType = 3;
  public static final int DeleteEntity = 4;
  public static final int GetEntities = 5;
  public static final int IOperationMethod = 6;
  public static final int IOperationType = 7;
  public static final int Microservice = 8;
  public static final int Operation = 9;
  public static final int OperationMethod = 10;
  public static final int OperationType = 11;
  public static final int READ = 12;
  public static final int UPDATE = 13;
  public static final int UpdateEntity = 14;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xe995fbb60310461aL, 0xbe22cc66f48262f1L);
    builder.put(0x4151f0e6b1c7ddb6L, CREATE);
    builder.put(0x4151f0e6b1d0731fL, CreateEntity);
    builder.put(0x4151f0e6b1c7ddb8L, DELETE);
    builder.put(0x1878631b6ae763cbL, DataType);
    builder.put(0x4151f0e6b1d117ccL, DeleteEntity);
    builder.put(0x4151f0e6b1d07321L, GetEntities);
    builder.put(0x4151f0e6b1d117cdL, IOperationMethod);
    builder.put(0x4151f0e6b1cb88b6L, IOperationType);
    builder.put(0x76e8bdba0ceb9bb9L, Microservice);
    builder.put(0x76e8bdba0ceb9bbcL, Operation);
    builder.put(0x4151f0e6b1d0731eL, OperationMethod);
    builder.put(0x4151f0e6b1c68c22L, OperationType);
    builder.put(0x4151f0e6b1c74508L, READ);
    builder.put(0x4151f0e6b1c7ddb7L, UPDATE);
    builder.put(0x4151f0e6b1d07320L, UpdateEntity);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
