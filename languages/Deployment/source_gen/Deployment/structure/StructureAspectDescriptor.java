package Deployment.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptDeploymentConfig = createDescriptorForDeploymentConfig();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.aggregatedLanguage(0xe995fbb60310461aL, 0xbe22cc66f48262f1L, "Microservice");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptDeploymentConfig);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.DeploymentConfig:
        return myConceptDeploymentConfig;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForDeploymentConfig() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Deployment", "DeploymentConfig", 0xc2a6432be821404bL, 0xaf0e22b30531f868L, 0x76dbdb74d850dc4L);
    b.class_(false, false, true);
    b.origin("r:d65c3470-1169-4d9a-a5dd-2196914085f2(Deployment.structure)/535292525704187332");
    b.version(2);
    b.property("maintainer", 0x76dbdb74d850dc7L).type(PrimitiveTypeId.STRING).origin("535292525704187335").done();
    b.aggregate("microservice", 0x675907eeb91f484eL).target(0xe995fbb60310461aL, 0xbe22cc66f48262f1L, 0x675907eeb91f484bL).optional(false).ordered(true).multiple(false).origin("7446992180723271758").done();
    return b.create();
  }
}
